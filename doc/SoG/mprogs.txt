#
# $Id: mprogs.txt,v 1.7 2001-09-17 19:22:57 fjoe Exp $
#

MPC code style
--------------

man 9 style with replacing '\t' (tab) with 8 (eight) spaces.

MPC types
---------

string	-- a string
char	-- character (mobile)
obj	-- object
room	-- room

MPC statements
--------------

Valid statements are:

1) 'if' operator

if (expr)
	stmt;
[else
	stmt;]

2) 'switch' operator

swtich (expr) {
case const:
	stmt;
	....
[default:
	stmt;
	...]
}

3) 'foreach' operator

foreach (var, iter([iter args...]))
	stmt;

4) 'return' operator

return expr;

5) expression

expr;

6) compound statement

{
	stmt;
	...
}

7) declaration

type var [= expr];

MPC expressions
---------------

All C expressions are valid in MPC:
- all arithmetic operators (+, -, /, %, *),
- all logical operators (&&, ||) with incomplete operands calculation,
- all assignment operators (=, +=, -=, /=, %=, *=, <<=, >>=)
- pre/post increment/decrement operators (pre and post ++, --)
- tertiary operator ?:
- function calls

MPC iterators
-------------

int range(int from, int to)
	from should not be greater than to

char char_in_room(room r)

char char_in_world()

char npc_in_world()

obj obj_in_obj(obj o)

obj obj_of_char(char ch)

obj obj_in_room(room r)

obj obj_in_world()

MPC functions:
--------------

act(string msg, char ch, void arg1, void arg2, int act_flags)
  выводит сообщение msg
  act_flags: TO_CHAR    -- чару ch
             TO_ROOM    -- всем в комнате кроме чара ch
	     TO_ALL     -- всем в комнате
	     TO_VICT    -- жертве (arg2)
	     TO_NOTVICT -- всем к комнате кроме чара ch и жертвы (arg2)

act_char(string msg, char ch)
  выводит сообщение msg чару ch

act_say(char ch, string msg, void arg)
  чаром ch говорится ("say") сообщение msg, в которое подставляется
  arg как параметр ($N, $P, $T, $K etc)

act_yell(char ch, string msg, void arg, string format)
  чаром ch выкрикивается сообщение msg, в котором могут быть использованы
  различные параметры ($N, $T etc)

affect_char(char ch, int where, string sn, int level, int duration,
            int loc, int mod, int bits)
  вешается на чара ch указанный аффект sn с задаваемыми характеристиками
  (уровень level, длительность duration, ...)

affect_strip(char ch, string aff)
  снимается аффект aff с чара ch

int backstab_chance(char ch)
  возвращает шанс прохождения backstab

backstab_char(char ch, char victim, int chance)
  делается backstab чаром ch чару victim с вероятностью chance

bool can_loot(char ch, obj p)
  может ли чар полутить (loot) объект p

bool can_see(char ch, char victim)
  проверяется видит ли чар ch чара victim

bool can_wear(obj p, int wear)
  может ли объект одеться в слот wear

cast(string sn, char ch, string arg)
  чаром ch кастится заклинание/молитва sn с аргументом arg

cast_char(string sn, char ch, char victim)
  чаром ch на чар victim кастится заклинание/молитва sn

cast_obj(string sn, char ch, obj p)
  чаром ch на объект p накладывается заклинание/молитва sn

string char_clan(char ch)
  возвращает clan чара ch

char char_fighting(char ch)
  возвращает чара, с которым дерется ch

int char_gold(char ch)
  возвращает кол-во золотых монет у чара ch

int char_hit(char ch)
  возвращает текущее кол-во hp чара ch

string char_hometown(char ch)
  возвращает 'hometown' чара ch, для моба возвращает зону в которой он заресечен
  или (если родился не через reset) зону в которой находится в настоящий момент

int char_level(char ch)
  возвращает уровень чара (с +lev)

int char_max_hit(char ch)
  возвращает максимальное количество hp чара ch

int char_position(char ch)
  позиция ch (POS_RESTING, POS_FIGHTING etc.)

int char_quest_time(char ch)
  возвращает quest time для чара ch (-1 если ch npc)

string char_race(char ch)
  возвращает расу чара ch

room char_room(char ch)
  возвращает комнату в которой находится чар ch

int char_sex(char ch)
  возвращает пол чара ch

int char_silver(char ch)
  возвращает количество серебряных монет у чара ch

int char_size(char ch)
  возвращает размер чара ch

int char_vnum(char ch)
  возвращает vnum чара ch

bool close_door(char ch, string door)
  чар ch закрывает (пытается) дверь

bool close_obj(char ch, obj p)
  чар ch выполняет операцию закрытия обьекта p

cold_effect(char ch, int num, int dam)
  вешает (пытается повесить) на чара cold_effect
  уровня num, наносится урон dam

char create_mob(int vnum, int flags)
  создает моба по его внуму

obj create_obj(int vnum, int flags)
  создает обьект по его внуму

bool damage(char ch, char victim, int dam, string dt, int dam_class,
            int dam_flags)
  чаром ch наносится чару victim урон в размере dam. Тип наносимого
  урона -- dam_class

int dice(int num, int size)
  бросает num раз кубик с числом граней size

dofun(string name, char ch, string arg)
  чар ch выполняет do-функцию 'name'

drop_obj(char ch, obj p)
  чаром ch бросается обьект p

fire_effect(char ch, int num, int dam)
  вешает (пытается повесить) на чара fire_effect
  уровня num, наносится урон dam

extract_obj(obj p, int flags)
  уничтожает обьект p

char get_char_area(char ch, string arg)
  чаром ch в арии, где он находится, ищется чар с именем arg
  (arg может быть vnum'ом)

char get_char_here(char ch, string arg)
  чаром ch в комнате, где он находится, ищется чар с именем arg
  (arg может быть vnum'ом)

char get_char_room(char ch, room r, string arg)
  чаром ch в комнате r ищется чар с именем arg
  (arg может быть vnum'ом)

char get_char_world(char ch, string arg)
  чаром ch в мире ищется чар с именем arg (arg может быть vnum'ом)

obj get_eq_char(char ch, int iWear)
  возвращается объект, одетый у чара ch в слоте iWear

bool get_obj(char ch, obj p, obj container, string msg_others)
  чаром ch берется объект p из container или с пола (если container == NULL)
  msg_others -- сообщение, пишущееся тем, кто стоит в той же комнате, где
  происходит действие (может быть NULL)

obj get_obj_carry(char ch, char victim, string arg)
  чаром ch смотрится у чара victim, есть ли у последнего обьект c 
  именем arg, arg может быть vnum'ом

obj get_obj_here(char ch, string arg)
  чаром ch смотрится есть ли в комнате, где находится чар ch, объект
  с именем arg (ищется на полу и у чара ch), arg может быть vnum'ом

obj get_obj_obj(char ch, obj p, string arg)
  чаром ch смотрится есть ли в объекте p объект с именем arg, arg может
  быть vnum'ом

obj get_obj_room(char ch, room r, string arg)
  чаром ch смотрится есть ли в комнате r объект c именем arg
  (ищется на полу)
  в комнате), arg может быть vnum'ом

obj get_obj_wear(char ch, char victim, string arg)
  чаром ch смотрится, одет ли на чаре victim объект с именем arg,
  arg может быть vnum'ом

obj get_obj_world(char ch, string arg)
  чаром ch ищется в мире объект с именем arg, arg может быть vnum'ом

get_pulse(

char get_random_fighting(char ch)
  возвращает случайного чара в одной комнате с ch, который сражается
  с ch или который сражается с чаром, который сидит верхом на ch

room get_room_index(int vnum)
  возвращает комнату по ее внуму (NULL, если комнаты с таким внумом нет)

bool give_obj(char ch, char victim, obj p)
  чаром ch чару victim дается объект p (пытается)

handle_death(char ch, char victim)
  зовется функция handle_death чару ch для умершего чара victim

int has_sp(char ch, string spn, string spn_add, string spn_rm)

bool is_affected(char ch, int aff)
  наложен ли на чара ch аффект aff (e.g AFF_POISON)

bool is_awake(ch)
  char_position(ch) > POS_SLEEPING

bool is_class(char ch, string cl)
  принадлежит ли чар ch классу cl

bool is_evil(char ch)
  имеет ли чар ch align evil

bool is_ghost(char ch)
  является ли чар ch привидением

bool is_good(char ch)
  имеет ли чар ch align good

bool is_immortal(char ch)
  является ли чар ch immortal'ом

bool is_npc(char ch)
  является ли чар ch мобом (npc)

bool is_neutral(char ch)
  имеет ли чар ch align neutral

bool is_owner(char ch, obj p)
  является ли чар ch owner'ом обьекта p

bool is_owner_name(obj p, string name)
  принадлежит ли обьект p чару с именем name

bool is_safe(char ch, char victim)

bool is_safe_nomessage(char ch, char victim)

bool is_sn_affected(char ch, string sn)
  наложен ли на чара аффект sn (e.g. "berserk")

bool is_wanted(char ch)
  является лм чар ch WANTED

obj load_obj(char ch, int vnum)
  создается объект с номером vnum и дается чару ch

bool lock_door(char ch, string door)
  замыкается (пытается) дверь чаром ch 

bool lock_obj(char ch, obj p)
  замыкается (пытается) объект p чаром ch

look_char(char ch, char victim)
  чар ch смотрит на чара victim (делает "look")

mob_interpret(char ch, string arg)
  чаром ch выполняется команда arg (без параметров)

multi_hit(char ch, char victim, string dt)
  зовется функция multi_hit (один battle round) для чара ch по жертве,
  чару victim)

int number_bits(int width)
  возвращает случайное число в диапазоне от 0 до 2^width (включительно)

int number_percent()
  возвращает случайное число от 1 до 100 (процент)

int number_range(int from, int to)
  возвращает случайное число в диапазоне от from до to

obj_cast_spell(string sn, int level, char ch, void vo)

int obj_cost(obj p)
  возвращает стоимость объекта p

int obj_item_type(obj p)
  item_type объекта p (ITEM_CONTAINER, ITEM_WEAPON etc.)

int obj_level(obj p)
  возвращает уровень обьекта p

int obj_timer(obj p)
  возвращает таймер на обьекте p

obj_to_char(obj p, char ch)
  объет p дается чару ch

obj_to_obj(obj p, obj obj_to)
  объект p кладется в объект obj_to

obj_to_room(obj p, room r)
  объект p помещается в комнату r

int obj_vnum(obj p)
  возвращает vnum объекта p

int obj_wear_loc(obj p)
  возвращается слот, где одет объект p

one_hit(char ch, char victim, string dt, bool secondary)
  наносится один удар чаром ch по чару victim

bool open_door(char ch, string door)
  чар ch открывает (пытается) дверь door 

bool open_obj(char ch, obj p)
  открывает (пытается открыть) обьет p, открывает обьект чар ch

poison_effect(char ch, int num, int dam)
  вешает (пытается повесить) на чара poison_effect
  уровня num, наносится урон dam

int real_char_level(char ch)
  возвращает реальный (без +lev) уровень чара ch

int room_sector(room r)
  возвращает сектор в комнате r.

say_spell(char ch, string sn)
  произносится заклинание sn (или возносится молитва)

sand_effect(char ch, int num, int dam)
  вешает (пытается повесить) на чара sand_effect
  уровня num, наносится урон dam

scream_effect(char ch, int num, int dam)
  вешает (пытается повесить) на чара ch scream_effect
  уровня num, наносится урон dam

set_char_gold(char ch, int num)
  устанавливает чару ch количество золота num.

set_char_hit(char ch, int num)
  ставит чару количество (текущее) hp в размере num.

set_char_silver(char ch, int num)
  устанавливает чару ch количество серебра num.

set_obj_level(obj p, int level)
  ставит обьекту p уровень level.

set_obj_timer(obj p, int timer)
  устанавливает таймер на обьект p, длительностью timer

set_weapon_dice_type(obj p, int dice_type)
  оружию p ставится dice_type (v2)

shock_effect(char ch, int num, int dam)
  вешает (пытается повесить) на чара ch shock effect
  уровня num, наносится урон dam

social_char(string name, char ch, char victim)
  делается social name (e.g "smile") чаром ch чару victim

spclass_count(char ch, string spn, string spn_add, string spn_rm)

spellfun_call(string fn_sn, string sn, int level, char ch, void vo)
  зовется спеллфункция fn_sn уровня level на аргумент vo (char/obj)
  для чара ch, sn в подавляющем большинстве случаев NULL

int time_hour(char ch)
  текущий час (по времени мира)

bool transfer_char(char ch, room r)
  переносится чар ch в комнату r

bool transfer_group(char ch, room r)
  переносится группа чара ch в комнату r

tell_char(char ch, char victim, string msg)
  msg передается от чара ch чару victim посредством tell'а

int umax(int i1, int i2)
  максимальное из чисел i1, i2

int umin(int i1, int i2)
  минимальное из чисел i1, i2

bool unlock_door(char ch, door)
  размыкает (пытается) дверь, действие пройзволит чар ch

bool unlock_obj(char ch, obj p)
  размыкает (пытается) обьект p, действие пройзволит чар ch

wait_state(char ch, int dur)
  чару ch делается задержка длительностью dur

bool weapon_is(obj p, int wclass)
  является ли p оружием класса wclass (WEAPON_SWORD, WEAPON_DAGGER etc.)

Porting ROM 2.4 mob progs:
--------------------------

isvisible проверки излишни, потому что в SoG 2 триггера
срабатывают только тогда, когда mob видит игрока

echoat $N
	act("...", $n, NULL, $N, TO_VICT);

echoaround $N
	act("...", $n, NULL, $N, TO_NOTVICT);	

oload 2345
	load_obj($n, 2345)

purge $p
	extract_obj($p, 0);

slay $N
	raw_kill($n, $N);

ROM 2.4 specials:
-----------------

ROM 2.4 (and Anatolia) specials are implemented as fight or random mprogs.

When loading ROM 2.4 areas #SPECIALS section data is automatically converted
to mprog triggers for corresponding mobiles using the following table
(trig arg is set to "100"):

ROM 2.4 spec		| SoG mprogs
------------------------+---------------------------
spec_assassinater	| mob_random_assassinater
spec_breath_any		| mob_fight_breath_any
spec_breath_acid	| mob_fight_breath_acid
spec_breath_fire	| mob_fight_breath_fire
spec_breath_frost	| mob_fight_breath_frost
spec_breath_gas		| mob_fight_breath_gas
spec_breath_lightning	| mob_fight_breath_lightning
spec_captain		| mob_random_captain
			| mob_fight_cast_cleric
spec_cast_adept		| mob_random_cast_adept
spec_cast_beholder	| mob_fight_cast_beholder
spec_cast_clan		| mob_random_cast_clan
spec_cast_cleric	| mob_fight_cast_cleric
spec_cast_judge		| mob_fight_cast_judge
spec_cast_mage		| mob_fight_cast_mage
spec_cast_seneschal	| mob_fight_cast_seneschal
spec_cast_undead	| mob_fight_cast_undead
spec_executioner	| mob_random_executioner
spec_fido		| mob_random_fido
spec_guard		| mob_random_guard
spec_headlamia		| mob_random_headlamia
spec_janitor		| mob_random_janitor
spec_mayor		| mob_random_mayor
spec_nasty		| mob_random_nasty
			| mob_fight_nasty
spec_poison		| mob_fight_poison_bite
spec_special_guard	| mob_random_executioner
spec_thief		| mob_random_thief

Note that spec_captain and spec_nasty are converted to two triggers.

spec_patrolman, spec_ogre_member and spec_troll_member are not
converted because we do not have area for which they were created
(Dangerous Neighbourhood).
